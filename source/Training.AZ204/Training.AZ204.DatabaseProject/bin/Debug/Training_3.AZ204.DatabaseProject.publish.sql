/*
Deployment script for MiniInvoiceSystem

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MiniInvoiceSystem"
:setvar DefaultFilePrefix "MiniInvoiceSystem"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
    END


GO
PRINT N'Creating Table [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [Id]    INT          IDENTITY (1, 1) NOT NULL,
    [Name]  VARCHAR (50) NOT NULL,
    [Email] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Invoice]...';


GO
CREATE TABLE [dbo].[Invoice] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [RelativeUrl] VARCHAR (MAX) NOT NULL,
    [Amount]      DECIMAL (18)  NOT NULL,
    [Customer]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[OrderDetails]...';


GO
CREATE TABLE [dbo].[OrderDetails] (
    [Id]            INT          IDENTITY (1, 1) NOT NULL,
    [Description]   VARCHAR (50) NOT NULL,
    [PricePerUnit]  NCHAR (10)   NOT NULL,
    [NumberOfUnits] INT          NOT NULL,
    [OrderHeader]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[OrderHeader]...';


GO
CREATE TABLE [dbo].[OrderHeader] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Customer]  INT          NOT NULL,
    [Amount]    NCHAR (10)   NULL,
    [Reference] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Invoice_ToCustomer]...';


GO
ALTER TABLE [dbo].[Invoice] WITH NOCHECK
    ADD CONSTRAINT [FK_Invoice_ToCustomer] FOREIGN KEY ([Customer]) REFERENCES [dbo].[Customer] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_OrderDetails_ToÓrderHeader]...';


GO
ALTER TABLE [dbo].[OrderDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_OrderDetails_ToÓrderHeader] FOREIGN KEY ([OrderHeader]) REFERENCES [dbo].[OrderHeader] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_OrderHeader_ToCustomer]...';


GO
ALTER TABLE [dbo].[OrderHeader] WITH NOCHECK
    ADD CONSTRAINT [FK_OrderHeader_ToCustomer] FOREIGN KEY ([Customer]) REFERENCES [dbo].[Customer] ([Id]);


GO
